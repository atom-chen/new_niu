{"version":3,"sources":["../../../../assets/Script/kernel/AudioMgr.js"],"names":["AudioMgr","cc","Class","ctor","audioClipMap","bgm_on","sys","localStorage","getItem","effect_on","bgm","onDestroy","releaseAll","isBgmOpen","isEffectOpen","loadAudioDir","dirName","callback","loader","loadResDir","AudioClip","err","assets","urls","console","error","i","length","url","openBgm","openEffect","stopAll","bindObj","onfire","un","sound","releaseAsset","audioEngine","stopMusic","stopAllEffects","on","playMusic","setItem","music","clip","playEffect","effect","args","stopEffect","module","exports"],"mappings":"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","file":"AudioMgr.js","sourcesContent":["/**\n * 音效管理器， 对cc.audioEngine的封装\n */\n\nvar AudioMgr = cc.Class({\n\n    ctor: function() {\n        this.audioClipMap = {} //文件夹下的资源\n        this.bgm_on = (cc.sys.localStorage.getItem(\"bgm_on\") || \"true\") == \"true\"\n        this.effect_on = (cc.sys.localStorage.getItem(\"effect_on\") || \"true\") == \"true\"\n        this.bgm = null\n    },\n\n\n    onDestroy: function() {\n        this.releaseAll()\n    },\n    //背景音乐是否打开\n    isBgmOpen: function() {\n        return this.bgm_on || false\n    },\n    //音效是否打开\n    isEffectOpen: function() {\n        return this.effect_on || false\n    },\n\n    //加载dirName下所有的音频 加载完回调\n    loadAudioDir: function(dirName, callback) {\n        // 加载 sound 目录下所有 AudioClip，并且获取它们的路径\n        cc.loader.loadResDir(dirName, cc.AudioClip, (err, assets, urls) => {\n            if (err) {\n                console.error(\"加载错误\")\n                return\n            }\n            for (var i = 0; i < urls.length; ++i) {\n                var url = urls[i]\n                this.audioClipMap[url] = assets[i]\n\n            }\n            this.openBgm(this.bgm_on)\n            this.openEffect(this.effect_on)\n            callback()\n        });\n    },\n\n    //释放所有AudioMgr加载的音效\n    releaseAll: function() {\n        this.stopAll()\n        for (var i = 0; i < this.bindObj.length; i++) {\n            onfire.un(this.bindObj[i])\n        }\n        for (var i = 0; i < this.audioClipMap.length; i++) {\n            var sound = this.audioClipMap[i]\n            cc.loader.releaseAsset(sound);\n        }\n    },\n\n    //停止所有音乐\n    stopAll: function() {\n        cc.audioEngine.stopMusic();\n        cc.audioEngine.stopAllEffects();\n    },\n\n    //bgm开关\n    openBgm: function(on) {\n        if (on && this.bgm) {\n            cc.audioEngine.playMusic(this.bgm, true);\n        } else {\n            cc.audioEngine.stopMusic();\n        }\n        this.bgm_on = on\n        cc.sys.localStorage.setItem(\"bgm_on\", on);\n    },\n\n    //音效开关\n    openEffect: function(on) {\n        if (!on) {\n            cc.audioEngine.stopAllEffects(); //停止所有\n        }\n        this.effect_on = on\n        cc.sys.localStorage.setItem(\"effect_on\", on);\n    },\n\n    //播放背景音乐\n    //music: cc.AudioClip 或者AudioMgr加载的音效资源路径\n    playMusic: function(music) {\n        var clip = null\n        if (\"string\" === typeof music) { //string 路径播放\n            if (this.audioClipMap[music]) {\n                clip = this.audioClipMap[music]\n            } else {\n                console.error(\"你要播放的音乐不存在：\", music)\n            }\n        } else if (music instanceof cc.AudioClip) {\n            clip = music\n        }\n\n        if (clip) {\n            this.bgm = clip\n        } else {\n            console.error(\"背景音乐错误null\")\n            return\n        }\n        if (!this.isBgmOpen()) return; //背景音乐静音\n\n        return cc.audioEngine.playMusic(this.bgm, true);\n\n    },\n\n    //播放音效 返回effectID\n    //effect: cc.AudioClip 或者AudioMgr加载的音效资源路径\n    playEffect: function(effect, ...args) {\n        if (!this.isEffectOpen()) return //音效静音\n\n\n        var clip = null\n        if (\"string\" === typeof effect) { //string 路径播放\n            if (this.audioClipMap[effect]) {\n                clip = this.audioClipMap[effect]\n            }\n        } else if (effect instanceof cc.AudioClip) {\n            clip = effect\n        }\n\n        if (!clip) {\n            console.error(\"你要播放的音乐不存在：\", effect)\n            return\n        }\n\n        return cc.audioEngine.playEffect(clip, ...args);\n\n    },\n\n    stopEffect: function(...args) {\n        cc.audioEngine.stopEffect(...args);\n    },\n\n})\n\nmodule.exports = AudioMgr"]}